#!/usr/bin/env python3
import random
import skilstak.colors as colors
import getch

print(colors.clear)

# List of tiles

tiles = ["O", "#", "^", "|"]

# Creates map

w = 5
h = 5

map = [[0 for x in range(w)]for y in range (h)]


# Generates map

def generate():
    
    x = 4
    y = 4

    while x > -6:
        while y > -6:
            map[x][y] = random.choice(tiles)
            y -= 1
        x -= 1
        y = 4
        
generate()

# Places player unit

px1 = random.randrange(-5,-1)
py1 = random.randrange(-5,-1)

def move_p1():
    map[px1][py1] = colors.blue + map[px1][py1] + colors.reset
last_p1 = map[px1][py1]
move_p1()

# Places enemy unit

while True:
    ex1 = random.randrange(-5,-1)
    ey1 = random.randrange(-5,-1)
    if ex1 != px1 and ey1 != py1:
        break

def move_e1():
    map[ex1][ey1] = colors.red + map[ex1][ey1] + colors.reset
last_e1 = map[ex1][py1]
move_e1()

# Prints map

c = -5


def print_map(c):
    while c < 0: 
        print(map[-5][c] + map[-4][c] + map[-3][c] + map[-2][c] + map[-1][c])
        c += 1 
    c = -5

print_map(c)

# Player Phase

while True:
    while True:
        print("Where would you like to move Unit 1? (Use WASD to move).")
        direction = getch.getch()
    
        # North 
    
        if direction == "w":
            map[px1][py1] = last_p1 
            py1 -= 1
            if py1 < -5:
                print("You can't move there!")
                py1 += 1
            else: 
                last_p1 = map[px1][py1]
                move_p1()
                print(colors.clear)
                print_map(c)
                break
    
        # South 
    
        elif direction == "s":
            map[px1][py1] = last_p1 
            py1 += 1
            if py1 > -1:
                print("You can't move there!")
                py1 -= 1
            else: 
                last_p1 = map[px1][py1]
                move_p1()
                print(colors.clear)
                print_map(c)
                break
    
        # West 
    
        elif direction == "a":
            map[px1][py1] = last_p1 
            px1 -= 1
            if px1 < -5:
                print("You can't move there!")
                px1 += 1
            else: 
                last_p1 = map[px1][py1]
                move_p1()
                print(colors.clear)
                print_map(c)
                break
    
        # East 
    
        elif direction == "d":
            map[px1][py1] = last_p1 
            px1 += 1
            if px1 > -1:
                print("You can't move there!")
                px1 -= 1
            else: 
                last_p1 = map[px1][py1]
                move_p1()
                print(colors.clear)
                print_map(c)
                break
        else:
            print("That is not a direction.  Please try again.")

    # Enemy Phase

    while True:
        e1_action = random.randrange(0,3) 
    
        # North 
    
        if e1_action == 0:
            map[ex1][ey1] = last_e1 
            ey1 -= 1
            if ey1 < -5:
                ey1 += 1
            else: 
                last_e1 = map[ex1][ey1]
                move_e1()
                print(colors.clear)
                print_map(c)
                break
    
        # South 
    
        elif e1_action == 1:
            map[ex1][ey1] = last_e1 
            ey1 += 1
            if ey1 > -1: 
                ey1 -= 1
            else: 
                last_e1 = map[ex1][ey1]
                move_e1()
                print(colors.clear)
                print_map(c)
                break
    
        # West 
    
        elif e1_action == 2:
            map[ex1][ey1] = last_e1 
            ex1 -= 1
            if ex1 < -5: 
                ex1 += 1
            else: 
                last_e1 = map[ex1][ey1]
                move_e1()
                print(colors.clear)
                print_map(c)
                break
    
        # East 
    
        elif e1_action == 3:
            map[ex1][ey1] = last_e1 
            ex1 += 1
            if ex1 > -1:           
                exl -= 1
            else: 
                last_e1 = map[ex1][ey1]
                move_e1()
                print(colors.clear)
                print_map(c)
                break
